plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

def ext = rootProject.ext

android {
    compileSdkVersion ext.common.compileSdkVersion
    buildToolsVersion ext.common.buildToolsVersion
    resourcePrefix ext.prefix.main

    defaultConfig {
        applicationId ext.app.applicationId
        minSdkVersion ext.common.minSdkVersion
        targetSdkVersion ext.common.targetSdkVersion
        versionCode ext.common.versionCode
        versionName ext.common.versionName

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file(SUNHY_APP_RELEASE_STORE_FILE)
            storePassword SUNHY_APP_RELEASE_STORE_PASSWORD
            keyAlias SUNHY_APP_RELEASE_KEY_ALIAS
            keyPassword SUNHY_APP_RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "sunhy.top-talking-${variant.name}-${variant.versionName}.apk"
            }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    kapt {
        generateStubs = true
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation project(':components:bottle')
    implementation project(':components:wall')
    implementation project(':components:message')
    implementation project(':components:mine')
    implementation project(':components:login')
    api ext.deps.arouterApi
    kapt ext.deps.arouterCompiler
}